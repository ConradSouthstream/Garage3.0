@using Garage3.Views.Shared.Components
@model ParkingSlotCount
@{
    // TODO: Add more charts showing each vehicle type.
    if (Model.SlotsTaken == Model.SlotsTotal == true)
    {
        <br />
        @: Garage is full
        <br />
    }
    else
    {
        <br />
        @: @Model.SlotsTaken parking spaces out of @Model.SlotsTotal are occupied
<br />
    }
}

<html>
<head>
    <link rel="stylesheet" href="~/css/site.css">
</head>

<body>
    <!--Div that will hold the pie chart-->
    <br />
    <div class="chart_div" id="chart_div"></div>
    <br />
    <div class="card-deck">
        @foreach (var vehicleType in Model.VehicleTypeCount)
        {
            if (vehicleType.AmountAbleToPark < 1)
            {

                <div class="card w-75 text-white" style="width: 18rem;">
                    <img class="card-img-top" src="@vehicleType.ImgSrc" alt="Card image cap">
                    <div class="card-body">
                        <div class="vehicleTypeCount">
                            Type: @vehicleType.Type <br />
                            Parked: @vehicleType.AmountParked<br />
                            Available: @vehicleType.AmountAbleToPark
                        </div>
                    </div>
                </div>

            }
            else
            {

                <div class="card w-75 bg-success text-white" style="width: 18rem;">
                    <img class="card-img-top" src="@vehicleType.ImgSrc" alt="Card image cap">
                    <div class="card-body">
                        <div class="vehicleTypeCount">
                            Type: @vehicleType.Type <br />
                            Parked: @vehicleType.AmountParked<br />
                            Available: @vehicleType.AmountAbleToPark
                        </div>
                    </div>
                </div>

            }
        }
    </div>

    @*
        Scripts
        Load the AJAX API
    *@
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            var data = google.visualization.arrayToDataTable([
                ['Type', 'Unavailable Parking Spaces', 'Free Parking Spaces'],
                ['Parking Space',@Model.SlotsTaken,@Model.SlotsTotal-@Model.SlotsTaken]
            ]);
            var options = {
                backgroundColor: '#131313',
                color: '#f5f5f5',
                colors: ['red', 'green'],
                width: 987,
                height: 100,
                legend: { position: 'top', maxLines: 3, textStyle: { color: '#f5f5f5' } },
                bar: { groupWidth: '100%' },
                isStacked: true,
                vAxis: { textStyle: { color: '#f5f5f5' },},
                hAxis: {
                    titleTextStyle: { color: '#f5f5f5' },
                    textStyle:{color: '#f5f5f5'},
                    viewWindow: {
                        min: 0,
                        max: @Model.SlotsTotal
                    }
                },
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.BarChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }
    </script>
</body>
</html>